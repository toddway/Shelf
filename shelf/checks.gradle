apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$projectDir/build/reports")
}
task coverage(type: JacocoReport, dependsOn: "jvmTest") {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    // what to exclude from coverage report
    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*$Lambda$*.*', // Jacoco can not handleCommonError several "$" in class name.
            '**/*Module.*', // Modules for Dagger.
            '**/*Module_*Factory*', // Modules for Dagger.
            '**/*Dagger*.*', // Dagger auto-generated code.
            '**/*MembersInjector*.*', // Dagger auto-generated code.
            '**/*_Provide*Factory*.*',
            '**/*_Factory.*', //Dagger auto-generated code
            '**/*$*$*.*' // Anonymous classes generated by kotlin
    ]

    classDirectories = fileTree(
            dir: "$buildDir/classes/kotlin/jvm/main", excludes: excludes
    )

    sourceDirectories = files(["src/commonMain/kotlin", "src/jvmMain/kotlin"])
    executionData = files("$buildDir/jacoco/jvmTest.exec")
}

apply plugin: "io.gitlab.arturbosch.detekt"
detekt {
    version = "1.0.0.RC8"
    profile("main") {
        input = "$projectDir"
        config = "$projectDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
        output = "$projectDir/build/reports"
    }
}

apply plugin: 'cpd'
cpd {
    language = 'kotlin'
    toolVersion = '6.13.0'
}

cpdCheck {
    group = "verification"

    ignoreFailures true

    def classes = fileTree("$projectDir/src/jvmMain/kotlin")
    classes += fileTree("$projectDir/src/commonMain/kotlin")
    source = classes

    skipLexicalErrors true

    reports {
        text.enabled = true
        xml.enabled = true
    }
}

check.dependsOn(coverage)
check.dependsOn(detektCheck)
check.dependsOn(':cpdCheck')
check.finalizedBy ':printChecks'